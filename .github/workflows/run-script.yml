name: Run Translation Script and Deploy to Pages

# Triggers: Schedule and manual execution
on:
  schedule:
    - cron: "0 * * * *"  # Run every hour
  workflow_dispatch:  # Allows manual execution from the Actions tab

# Explicitly set permissions for the workflow
permissions:
  contents: write  # Ensure write access to the repository

jobs:
  run_script:
    runs-on: ubuntu-22.04  # Explicitly use Ubuntu 22.04

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8  # Use Python 3.8

      # Step 3: Install required Python libraries
      - name: Install dependencies
        run: |
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          pip install transformers requests sentencepiece

      # Step 4: Test if ACTIONS_PAT is set
      - name: Test ACTIONS_PAT Secret
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
        run: |
          echo "Testing if ACTIONS_PAT is available..."
          if [ -z "${ACTIONS_PAT}" ]; then
            echo "ACTIONS_PAT is not set!"
            exit 1
          else
            echo "ACTIONS_PAT is set and available."
          fi

      # Step 5: Run the Python script to generate translated_news.json
      - name: Run translation script
        run: python cryptonews_translator.py

      # Step 6: Commit and push the latest changes back to the repository
      - name: Commit and push changes
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add translated_news.json
          git diff --cached --quiet || git commit -m "Update translated news"
          git push https://x-access-token:${{ secrets.ACTIONS_PAT }}@github.com/${{ github.repository }}.git main

      # Step 7: Trigger GitHub Pages build
      - name: Trigger GitHub Pages Rebuild
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
        run: |
          echo "Triggering GitHub Pages build..."
          curl -X POST -H "Authorization: token ${{ secrets.ACTIONS_PAT }}" \
          https://api.github.com/repos/${{ github.repository }}/pages/builds
          echo "GitHub Pages rebuild triggered successfully."
